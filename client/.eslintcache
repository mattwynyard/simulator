[{"C:\\Users\\matt\\Documents\\Onsite\\simulator\\Map\\client\\src\\index.js":"1","C:\\Users\\matt\\Documents\\Onsite\\simulator\\Map\\client\\src\\App.js":"2","C:\\Users\\matt\\Documents\\Onsite\\simulator\\Map\\client\\src\\reportWebVitals.js":"3"},{"size":517,"mtime":1619062860011,"results":"4","hashOfConfig":"5"},{"size":3629,"mtime":1619062860009,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1619062860013,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"5c9jyf",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\matt\\Documents\\Onsite\\simulator\\Map\\client\\src\\index.js",[],["17","18"],"C:\\Users\\matt\\Documents\\Onsite\\simulator\\Map\\client\\src\\App.js",["19","20"],"import './App.css';\nimport { MapContainer, TileLayer, CircleMarker, ScaleControl} from 'react-leaflet';\nimport L, { LatLng } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport React, { useState, useEffect} from 'react';\n\nfunction App() {\n\n  const [counter, setCounter] = useState(0);\n  const [latlng, setPosition] = useState([]);\n  const [host] = useState(\"localhost:5000\");\n\n  useEffect(\n    () => {\n        const id = setInterval(() => {\n        setCounter(counter + 1); \n        getPosition().then(data => {\n            console.log(data);\n            let lat = data.latlng[0];\n            let lng = data.latlng[1];\n            setPosition([L.latLng(lat, lng)]);      \n        });           \n        }, 1000);\n        return () => {\n        clearInterval(id);\n        };\n    },\n    [counter],\n);\nconst getPosition = async () => {\n        \n  try {\n      const response = await fetch(\"http://\" + host + '/position', {\n          method: 'GET',\n          credentials: 'same-origin',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',        \n          },\n         \n      });\n      if (response.ok) {\n          const body = await response.json();\n          console.log(body);\n\n          return body; \n      } else {\n          \n          return Error(response);\n      }\n  } catch {\n      return new Error(\"connection error\")\n  }      \n};\n\n  return (\n    <div className=\"App\">\n       <MapContainer \n            className=\"map\" \n            center={[-36.81835, 174.74581]} \n            zoom={12} \n            minZoom={10}\n            maxZoom={18}\n            scrollWheelZoom={true}\n            keyboard={true}\n            \n            eventHandlers={{\n                load: () => {\n                  console.log('onload')\n                },\n              }}\n        >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          //url=\"http://localhost:5000/auckland/{z}/{x}/{y}.png\"\n        />\n         <ScaleControl name=\"Scale\" className=\"scale\"/>\n         {latlng.map((position, idx) =>\n            <CircleMarker\n              key={`marker-${idx}`} \n              center={position}\n              radius ={5}\n              fill={true}\n              fillOpacity={1.0}\n              eventHandlers={{\n                click: () => {\n                  console.log('marker clicked')\n                },\n              }}\n              >        \n            </CircleMarker>\n          )}\n          \n         </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n",["21","22"],"C:\\Users\\matt\\Documents\\Onsite\\simulator\\Map\\client\\src\\reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":3,"column":13,"nodeType":"29","messageId":"30","endLine":3,"endColumn":19},{"ruleId":"31","severity":1,"message":"32","line":28,"column":5,"nodeType":"33","endLine":28,"endColumn":14,"suggestions":"34"},{"ruleId":"23","replacedBy":"35"},{"ruleId":"25","replacedBy":"36"},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'LatLng' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosition'. Either include it or remove the dependency array.","ArrayExpression",["39"],["37"],["38"],"no-global-assign","no-unsafe-negation",{"desc":"40","fix":"41"},"Update the dependencies array to be: [counter, getPosition]",{"range":"42","text":"43"},[791,800],"[counter, getPosition]"]